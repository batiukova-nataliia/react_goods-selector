{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedWord","buttonResetHandler","setState","buttonSelectHandler","good","this","className","type","onClick","map","item","classNames","id","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oQAMaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAyB,CACvBC,aAAc,OAFlB,EAKEC,mBAAqB,WACnB,EAAKC,SAAS,CAAEF,aAAc,MANlC,EASEG,oBAAsB,SAACC,GACrB,OACE,EAAKF,SAAS,CACZF,aAAcI,KAZtB,4CAiBE,WAAU,IAAD,OACCJ,EAAiBK,KAAKN,MAAtBC,aAER,OACE,uBAAMM,UAAU,oBAAhB,UACE,qBAAIA,UAAU,sCAAd,UAEqB,KAAjBN,EAAsB,oBAAtB,UACOA,EADP,gBAGDA,GACC,wBACE,UAAQ,cACRO,KAAK,SACLD,UAAU,cACVE,QAASH,KAAKJ,wBAIpB,uBACEK,UAAU,QADZ,SAGE,gCAEGT,EAAMY,KAAI,SAAAC,GAAI,OACb,qBAEE,UAAQ,OACRJ,UAAWK,IAAW,GAAI,CACxB,+BAAgCX,IAAiBU,IAJrD,UAOE,6BACGV,IAAiBU,EAEd,wBACEH,KAAK,SACLD,UAAU,SACVM,GAAG,KACHJ,QAAS,kBAAM,EAAKL,oBAAoBO,IAJ1C,eAUA,wBACEH,KAAK,SACLD,UAAU,iBACVE,QAAS,kBAAM,EAAKL,oBAAoB,KAH1C,iBASN,oBACE,UAAQ,YACRG,UAAU,eAFZ,SAKGI,GAFIA,KA/BFA,iBA3CrB,GAAyBG,IAAMC,WCpB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a38c9d3d.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedWord: string,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    selectedWord: 'Jam',\n  };\n\n  buttonResetHandler = () => {\n    this.setState({ selectedWord: '' });\n  };\n\n  buttonSelectHandler = (good: string) => {\n    return (\n      this.setState({\n        selectedWord: good,\n      })\n    );\n  };\n\n  render() {\n    const { selectedWord } = this.state;\n\n    return (\n      <main className=\"section container\">\n        <h1 className=\"title is-flex is-align-items-center\">\n          {\n            selectedWord === '' ? 'No goods selected'\n              : `${selectedWord} is selected`\n          }\n          {selectedWord && (\n            <button\n              data-cy=\"ClearButton\"\n              type=\"button\"\n              className=\"delete ml-3\"\n              onClick={this.buttonResetHandler}\n            />\n          )}\n        </h1>\n        <table\n          className=\"table\"\n        >\n          <tbody>\n\n            {goods.map(item => (\n              <tr\n                key={item}\n                data-cy=\"Good\"\n                className={classNames('', {\n                  'has-background-success-light': selectedWord === item,\n                })}\n              >\n                <td>\n                  {selectedWord !== item\n                    ? (\n                      <button\n                        type=\"button\"\n                        className=\"button\"\n                        id=\"#1\"\n                        onClick={() => this.buttonSelectHandler(item)}\n                      >\n                        +\n                      </button>\n                    )\n                    : (\n                      <button\n                        type=\"button\"\n                        className=\"button is-info\"\n                        onClick={() => this.buttonSelectHandler('')}\n                      >\n                        -\n                      </button>\n                    )}\n                </td>\n                <td\n                  data-cy=\"GoodTitle\"\n                  className=\"is-vcentered\"\n                  key={item}\n                >\n                  {item}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}